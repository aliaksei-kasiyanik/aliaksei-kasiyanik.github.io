
swagger: '2.0'
info:
  title: Places API
  description: Move your app forward with the Places API
  version: "0.0.1"
  contact:
    name: Aliaksei Kasiyanik
    url: https://github.com/aliaksei-kasiyanik
    email: "aleksey.kasianik@gmail.com"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: places.com
schemes:
  - https
basePath: /api/v1
produces:
  - application/json
paths:
  /places:
    get:
      summary: Find Places by location
      description: >
        The Places endpoint returns list of Places at a given location with information about each Place. 
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
        - name: radius
          in: query
          description: Radius of search in meters. Default is 1000, maximum is 10000.
          required: false
          type: number
          format: double
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 20, maximum is 100.
      tags:
        - Places
      produces: [application/json]
      responses:
        200:
          description: OK. Success.
          schema:
            $ref: '#/definitions/PlaceArray'
        204:
          description: NO CONTENT. Success but nothing to return for specified parameters. Empty response body.
        400:
          description: BAD REQUEST. Domain validation errors, missing parameters, etc. 
          schema:
            $ref : '#/definitions/Error'
        500:
          description: INTERNAL SERVER ERROR. Unexpected error. Never returning intentionally.
          schema:
            $ref : '#/definitions/Error'
    post:
      summary: Create Place
      description: >
        This endpoint creates new Place. New Place id will be generated either on backend site or by client. If second then id must be specified in body.
      parameters:
        - name: place
          in: body
          description: Place
          required: true
          schema: 
            $ref: '#/definitions/Place'
      consumes:
        - application/json
      tags:
        - Places
      responses:
        201:
          description: CREATED. Successful Place creation occurred.
          schema:
              $ref: '#/definitions/Place'
        400:
          description: BAD REQUEST. Domain validation errors, missing parameters, etc. 
          schema:
            $ref : '#/definitions/Error'
        409:
           description: CONFLICT. Duplicate entries, trying to create two places with the same information.
           schema:
            $ref : '#/definitions/Error'
        500:
          description: INTERNAL SERVER ERROR. Unexpected error. Never returning intentionally.
          schema:
            $ref : '#/definitions/Error' 
    put:
      summary: Update Place
      description: Id of Place for updating is specified in body. 
      parameters:
        - name: item
          in: body
          description: Place
          required: true
          schema: 
            $ref: '#/definitions/Place'
      tags:
        - Places
      consumes:
        - application/json
      responses:
        204:
          description: NO CONTENT. Successful Place update.
        400:
          description: BAD REQUEST. Domain validation errors, missing parameters, etc. 
          schema:
            $ref : '#/definitions/Error'
        409:
           description: CONFLICT. Attempt to update out-to-date version of Place.
           schema:
            $ref : '#/definitions/Error'
        500:
          description: INTERNAL SERVER ERROR. Unexpected error. Never returning intentionally.
          schema:
            $ref : '#/definitions/Error'       
  /places/{id}:
    get:
      summary: Find Place by id
      description: The Places endpoint returns all information about the specific Place.
      parameters:
        - name: id
          in: path
          description: Unique identifier for Place
          required: true
          type: string
      tags:
        - Places
      produces: [application/json]
      responses:
        200:
          description: OK. Success.
          schema:
            $ref: '#/definitions/Place'
        404:
          description: NOT FOUND. Place with id doesn't exist.
          schema:
            $ref : '#/definitions/Error'
        400:
          description: BAD REQUEST. Invalid parameters. 
          schema:
            $ref : '#/definitions/Error'
        500:
          description: INTERNAL SERVER ERROR. Unexpected error. Never returning intentionally.
          schema:
            $ref : '#/definitions/Error'
    put:
      summary: Update Place
      description: Id of Place for updating is specified as query parameter. If id specified in body also then body id will be ignored.
      parameters:
        - name: id
          in: path
          description: Unique identifier for Place
          required: true
          type: string
        - name: item
          in: body
          description: Place
          required: true
          schema: 
            $ref: '#/definitions/Place'
      consumes:
        - application/json
      tags:
        - Places
      responses:
        204:
          description: NO CONTENT. Successful Place update.
        400:
          description: BAD REQUEST. Domain validation errors, missing parameters, etc. 
          schema:
            $ref : '#/definitions/Error'
        409:
           description: CONFLICT. Attempt to update out-to-date version of Place.
           schema:
            $ref : '#/definitions/Error'
        500:
          description: INTERNAL SERVER ERROR. Unexpected error. Never returning intentionally.
          schema:
            $ref : '#/definitions/Error'       
    delete:
      summary: Delete Place
      parameters:
        - name: id
          in: path
          description: Unique identifier for Place
          required: true
          type: string
      tags:
        - Places
      responses:
        204:
          description: NO CONTENT. Successful Place delete or there is no place with such id.
        500:
          description: INTERNAL SERVER ERROR. Unexpected error. Never returning intentionally.
          schema:
            $ref : '#/definitions/Error'
    
            
definitions:
  Place:
    type: object
    properties:
      item:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier representing a specific place.
            example: "f4gh45hg2gkjg52"
          location:
            $ref : '#/definitions/GeoJsonGeometry'
          name:
            type: string
            description: Display name of place
            example: Mir Castle Complex
          description:
            type: string
            description: Description of place.
            example: Mir Castle is a UNESCO World Heritage site in Belarus.
          categories:
            type: array
            items:
              type: string
              example: ["castle", "historic", "belarus"]
          image:
            type: string
            description: URL for main image representing the place.
            example: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9b/Mir_castle_in_spring.JPG/1920px-Mir_castle_in_spring.JPG"
      _meta:
        type: object
        properties:
          self:
            type: string
            example: "/places/f4gh45hg2gkjg52"
  PlaceArray:
    type: object
    properties:
      items:
        type: array
        items: 
          $ref : '#/definitions/Place'
      _meta:
        type: object
        properties:
          self:
            type: string
            example: "/places?latitude=53.4511508&longitude=26.4729114&offset=20&limit=10"
          next: 
            type: string
            example: "/places?latitude=53.4511508&longitude=26.4729114&offset=30&limit=10"
          prev:
            type: string
            example: "/places?latitude=53.4511508&longitude=26.4729114&offset=10&limit=10"
  GeoJsonGeometry:
    type: object
    properties:
      type:
        type: string
        enum: ["Point", "MultiPoint", "LineString", "MultiLineString", "Polygon", "MultiPolygon"]
        example: "Point"
      coordinates:
        type: array
        items: 
          type: number
          format: double
          example: [53.4511508,26.4729114]
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
